server:
  port: 20100
spring:
  application:
    name: gp-resources-manager
  #mongo配置
  data:
    mongodb:
      database: gp_cms
      uri: mongodb://root:123456@127.0.0.1:27017
  datasource:
    druid:
      url: ${MYSQL_URL:jdbc:mysql://localhost:3306/gp_resource?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8}
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
pagehelper:
  helper-dialect: mysql
mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml #指定mapper映射文件路径
  configuration:
    map-underscore-to-camel-case: true #开启驼峰命名法
eureka:
  client:
    register-with-eureka: true #注册服务开关
    fetch-registry: true #服务发现开关
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
  instance:
    prefer-ip-address: true #将自己的ip地址注册到eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id:  ${spring.application.name}:${server.port} #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作 没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000 #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
